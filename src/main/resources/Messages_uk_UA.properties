doctors=\u041b\u0456\u043a\u0430\u0440\u0456
patients=\u041f\u0430\u0446\u0456\u0454\u043d\u0442\u0438
generalExams=\u0417\u0430\u0433\u0430\u043b\u044c\u043d\u0456 \u043e\u0431\u0441\u0442\u0435\u0436\u0435\u043d\u043d\u044f

menu=\u041c\u0435\u043d\u044e
tables=\u0422\u0430\u0431\u043b\u0438\u0446\u0456
new_doctor=\u041d\u043e\u0432\u0438\u0439 \u043b\u0456\u043a\u0430\u0440
new_patient=\u041d\u043e\u0432\u0438\u0439 \u043f\u0430\u0446\u0456\u0454\u043d\u0442
new_general_exam=\u041d\u043e\u0432\u0435 \u0437\u0430\u0433\u0430\u043b\u044c\u043d\u0435 \u043e\u0431\u0441\u0442\u0435\u0436\u0435\u043d\u043d\u044f
filter_by_last_name=\u0424\u0456\u043b\u044c\u0442\u0440 \u0437\u0430 \u043f\u0440\u0437\u0432\u0449.\u043f.

id=\u041a\u043b\u044e\u0447
firstName=\u0406\u043c'\u044f
middleName=\u041f\u043e-\u0431\u0430\u0442\u044c\u043a\u043e\u0432\u0456
lastName=\u0424\u0430\u043c\u0456\u043b\u0456\u044f
birthDate=\u0414\u0430\u0442\u0430 \u043d\u0430\u0440\u043e\u0434\u0436\u0435\u043d\u043d\u044f
gender=\u0421\u0442\u0430\u0442\u044c
race=\u0420\u0430\u0441\u0430
photoName=\u0424\u043e\u0442\u043e\u0433\u0440\u0430\u0444\u0456\u044f
qualification=\u0417\u0432\u0430\u043d\u043d\u044f,\u043a\u0432\u0430\u043b\u0456\u0444\u0456\u043a\u0430\u0446\u0456\u044f
image=\u0417\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u043d\u044f

save=\u0417\u0431\u0435\u0440\u0435\u0433\u0442\u0438
cancel=\u0421\u043a\u0430\u0443\u0432\u0430\u0442\u0438
delete=\u0412\u0438\u0434\u0430\u043b\u0438\u0442\u0438

patient=\u041f\u0430\u0446\u0456\u0435\u043d\u0442
doctor=\u041b\u0456\u043a\u0430\u0440
taken=\u0414\u0430\u0442\u0430
aerialExams=\u0417\u043e\u043d\u0430\u043b\u044c\u043d\u0456 \u0434\u043e\u0441\u043b\u0456\u0434\u0436\u0435\u043d\u043d\u044f

doctor.firstName=\u041b.\u0406\u043c'\u044f
doctor.lastName=\u041b.\u0424\u0430\u043c\u0456\u043b\u0456\u044f
patient.firstName=\u041f.\u0406\u043c'\u044f
patient.lastName=\u041f.\u0424\u0430\u043c\u0456\u043b\u0456\u044f
patient.photoName=\u0424\u043e\u0442\u043e

length_limitation_1_25=\u0414\u043e\u0432\u0436\u0438\u043d\u0430 \u043f\u043e\u043b\u044f \u043f\u043e\u0432\u0438\u043d\u043d\u0430 \u0431\u0443\u0442\u0438 \u0443 \u043c\u0435\u0436\u0430\u0445 1..25
file_selection=\u041e\u0431\u0435\u0440\u0456\u0442\u044c \u0444\u0430\u0439\u043b \u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u043d\u044f \u0431\u0443\u0434\u044c-\u043b\u0430\u0441\u043a\u0430
upload=\u0417\u0430\u0432\u0430\u043d\u0442\u0430\u0436\u0438\u0442\u0438

GENERAL_APPEARANCE=\u0417\u0430\u0433\u0430\u043b\u044c\u043d\u0438\u0439 \u0441\u0442\u0430\u043d
HEAD=\u0413\u043e\u043b\u043e\u0432\u0430
EYES=\u041e\u0447\u0456
EARS= \u0412\u0443\u0445\u0430
NOSE=\u041d\u0456\u0441 
THROAT= \u0413\u043e\u0440\u043b\u043e
NECK=\u0428\u0438\u044f
CARDIAC=\u0421\u0435\u0440\u0434\u0446\u0435\u0432\u043e-\u0441\u0443\u0434\u0438\u043d\u043d\u0430 \u0441\u0438\u0441\u0442.    
LUNGS=\u041b\u0435\u0433\u0435\u043d\u0456
ABDOMEN=\u0427\u0435\u0440\u0435\u0432\u043d\u0430 \u043f\u043e\u0440\u043e\u0436\u043d\u0438\u043d\u0430
MUSKOSKELETAL=\u041c\u044f\u0437\u043e\u0432\u043e-\u0441\u043a\u0435\u043b\u0435\u0442\u043d\u0430 \u0441\u0438\u0441\u0442.
BACK=\u0421\u043f\u0438\u043d\u0430
EXTREMITIES=\u041a\u0456\u043d\u0446\u0456\u0432\u043a\u0438
NEUROLOGICAL=\u041d\u0435\u0432\u0440\u043e\u043b\u043e\u0433\u0456\u0447\u043d\u0430 \u0441\u0438\u0441\u0442.
SKIN=\u0428\u043a\u0456\u0440\u0430
PSYCHIATRIC=\u041f\u0441\u0438\u0445\u0456\u0447\u043d\u0438\u0439 \u0441\u0442\u0430\u043d
#MALE
RECTAL=\u0420\u0435\u043a\u0442\u0430\u043b\u044c\u043d\u0438\u0439 \u043e\u0433\u043b\u044f\u0436
GENITALIA=\u0413\u0435\u043d\u0456\u0442\u0430\u043b\u0456\u0457
#FEMALE
BREASTS=\u0413\u0440\u0443\u0434\u0438
PELVIC=\u041e\u0431\u043b\u0430\u0441\u0442\u044c \u0442\u0430\u0437\u0443



javax.validation.constraints.AssertFalse.message = \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0430\u0442\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u0445\u0438\u0431\u0430
javax.validation.constraints.AssertTrue.message  = \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u043c\u0430\u0442\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u0456\u0441\u0442\u0438\u043d\u0430
javax.validation.constraints.DecimalMax.message  = must be less than ${inclusive == true ? 'or equal to ' : ''}{value}
javax.validation.constraints.DecimalMin.message  = must be greater than ${inclusive == true ? 'or equal to ' : ''}{value}
javax.validation.constraints.Digits.message      = numeric value out of bounds (<{integer} digits>.<{fraction} digits> expected)
javax.validation.constraints.Future.message      = \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u0431\u0443\u0442\u0438 \u0443 \u043c\u0430\u0439\u0431\u0443\u0442\u043d\u044c\u043e\u043c\u0443
javax.validation.constraints.Max.message         = must be less than or equal to {value}
javax.validation.constraints.Min.message         = must be greater than or equal to {value}
javax.validation.constraints.NotNull.message     = \u043d\u0435 \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u0431\u0443\u0442\u0438 \u0440\u0456\u0432\u043d\u0435 null
javax.validation.constraints.Null.message        = \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u0431\u0443\u0442\u0438 \u0440\u0456\u0432\u043d\u0435 null
javax.validation.constraints.Past.message        = \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u0431\u0443\u0442\u0438 \u0443 \u043c\u0438\u043d\u0443\u043b\u043e\u043c\u0443
javax.validation.constraints.Pattern.message     = \u043f\u043e\u0432\u0438\u043d\u043d\u0435 \u0437\u043f\u0456\u0432\u043f\u0430\u0434\u0430\u0442\u0438 \u0437 \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u0438\u043c \u0432\u0438\u0440\u0430\u0437\u043e\u043c "{regexp}"
javax.validation.constraints.Size.message        = \u0440\u043e\u0437\u043c\u0456\u0440 \u043f\u043e\u0432\u0438\u043d\u0435\u043d \u0431\u0443\u0442\u0438 \u043c\u0456\u0436 {min} \u0442\u0430 {max}

org.hibernate.validator.constraints.CreditCardNumber.message        = invalid credit card number
org.hibernate.validator.constraints.EAN.message                     = invalid {type} barcode
org.hibernate.validator.constraints.Email.message                   = not a well-formed email address
org.hibernate.validator.constraints.Length.message                  = \u0434\u043e\u0432\u0436\u0438\u043d\u0430 \u043f\u043e\u0432\u0438\u043d\u043d\u0430 \u0431\u0443\u0442\u0438 \u043c\u0456\u0436 {min} \u0442\u0430 {max}
org.hibernate.validator.constraints.LuhnCheck.message               = The check digit for ${validatedValue} is invalid, Luhn Modulo 10 checksum failed
org.hibernate.validator.constraints.Mod10Check.message              = The check digit for ${validatedValue} is invalid, Modulo 10 checksum failed
org.hibernate.validator.constraints.Mod11Check.message              = The check digit for ${validatedValue} is invalid, Modulo 11 checksum failed
org.hibernate.validator.constraints.ModCheck.message                = The check digit for ${validatedValue} is invalid, ${modType} checksum failed
org.hibernate.validator.constraints.NotBlank.message                = \u043d\u0435 \u043c\u043e\u0436\u0435 \u0431\u0443\u0442\u0438 \u043f\u0443\u0441\u0442\u0438\u043c
org.hibernate.validator.constraints.NotEmpty.message                = \u043d\u0435 \u043c\u043e\u0436\u0435 \u0431\u0443\u0442\u0438 \u043f\u0443\u0441\u0442\u0438\u043c
org.hibernate.validator.constraints.ParametersScriptAssert.message  = script expression "{script}" didn't evaluate to true
org.hibernate.validator.constraints.Range.message                   = must be between {min} and {max}
org.hibernate.validator.constraints.SafeHtml.message                = may have unsafe html content
org.hibernate.validator.constraints.ScriptAssert.message            = script expression "{script}" didn't evaluate to true
org.hibernate.validator.constraints.URL.message                     = must be a valid URL



find=\u0417\u043d\u0430\u0439\u0442\u0438
#\u041e\u0431\u0440\u0430\u0442\u0438
select=\u041e\u0431\u0440\u0430\u0442\u0438
select_row_please=\u0411\u0443\u0434\u044c-\u043b\u0430\u0441\u043a\u0430 \u043e\u0431\u0435\u0440\u0456\u0442\u044c \u0437\u0430\u043f\u0438\u0441
TEMPERATURE=\u0422\u0435\u043c\u043f\u0435\u0440\u0430\u0442\u0443\u0440\u0430 (\u0421)
PULSE=\u041f\u0443\u043b\u044c\u0441
HEIGHT=\u0417\u0440\u0456\u0441\u0442(\u0441\u043c)
WEIGHT=\u0412\u0430\u0433\u0430(\u041a\u0433)
BREATH_RATE=\u0427\u0430\u0441\u0442\u043e\u0442\u0430 \u0434\u0438\u0445\u0430\u043d\u043d\u044f
SYSTOLIC_ARTERIAL_PRESSURE=\u0421\u0438\u0441\u0442.\u0430\u0440\u0442.\u0442\u0438\u0441\u043a
DIASTOLIC_ARTERIAL_PRESSURE=\u0414\u0456\u0430\u0441\u0442.\u0430\u0440\u0442.\u0442\u0438\u0441\u043a
